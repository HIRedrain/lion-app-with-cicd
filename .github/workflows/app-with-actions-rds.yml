name: App With Github Actions with RDS CI/CD

on:
  workflow_dispatch

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Make application-prod.properties
      run: |
        cd ./src/main/resources
        touch ./application.properties
        echo "${{ secrets.AWS_PROPERTIES }}" > ./application.properties
      shell: bash
      
    - name: Build with Maven
      run: mvn -DskipTests -B package --file pom.xml
      
    - name: Naming jar file
      run: mv ./target/*.jar ./target/app.jar

    - name: Check jar file
      run: ls ./target

    - uses: actions/upload-artifact@v4
      with:
        name: app
        path: ./target/*.jar

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/lion-app-with-actions:latest
  cd:
    needs: ci
    runs-on: ubuntu-latest
    steps:
    - name: Execute deployment script
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
            cd
            sudo fuser -k -n tcp 8080 || true
            sudo docker stop $(sudo docker ps -aq)
            sudo docker container prune -f
            sudo docker rmi $(sudo docker images -aq)
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/lion-app-with-actions:latest

            # sudo docker run \
            # -d -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/lion-app-with-actions:latest \
            # -e SPRING_DATASOURCE_URL=jdbc:mysql://${{ secrets.AWS_RDS }}:3306/app
            # -e SPRING_DATASOURCE_USERNAME=${{ secrets.AWS_RDS_USERNAME }} \
            # -e SPRING_DATASOURCE_PASSWORD=${{ secrets.AWS_RDS_PASSWORD }}

            sudo docker run -d -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/lion-app-with-actions:latest

            sudo docker image prune -a -f

            
